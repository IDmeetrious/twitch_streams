plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.twitchstream"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    def retrofit_version = "2.9.0"
    def room_version = "2.3.0"
    def glide_version = "4.12.0"
    def dagger_version = "2.28.3"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // AndroidX
    kapt('androidx.annotation:annotation:1.2.0')
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.5'

    // Material
    implementation 'com.google.android.material:material:1.3.0'

    // Tests
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Retrofit
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"

    // RxJava3
    implementation "io.reactivex.rxjava3:rxjava:3.0.13"

    // Room
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")

    // Glide 
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt("com.github.bumptech.glide:compiler:$glide_version")
    implementation("com.github.bumptech.glide:glide:$glide_version") {
        exclude group: "com.android.support"
    }
    implementation("com.github.bumptech.glide:glide:$glide_version@aar") {
        transitive = true
    }

    // Play Core
    implementation("com.google.android.play:core:1.10.0")
    // For Kotlin users also import the Kotlin extensions library for Play Core:
    implementation("com.google.android.play:core-ktx:1.8.1")

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt("com.google.dagger:dagger-compiler:$dagger_version")

}